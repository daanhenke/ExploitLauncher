var path = require('path');
var glob = require('glob');
var express = require('express');
var md5 = require('md5');
var settings = require('./../config.json');
var exploitdb = require('./../exploitdb.json');
var fs = require("fs");
var router = express.Router();


router.get('/', function(req, res, next) {
    var data = {};
    data.sploits = {};
    data.title = req.query.version;

    var folder = req.query.folder;
    if (folder == null) folder = '$root';
    if (settings.mergeSystemVersions)
    {
        if (req.query.version == 551 || req.query.version == 550)
        {
            var version = 550;
        }
        else if (req.query.version == 540 || req.query.version == 532)
        {
            var version = 532;
        }
    }
    data.version = version;
    if (fs.existsSync(path.join(__dirname, '../exploits', version.toString(), 'filesystem.json')))
    {
        var fsdata = require(path.join(__dirname, '../exploits', version.toString(), 'filesystem.json'));
    }
    else
    {
        var fsdata = {};
    }
    glob.glob(path.join(__dirname, '../exploits', version.toString(), '*.*'), function (err, files) {
        if (err != null) throw err;

        for (var file in files)
        {
            if (path.basename(files[file]) != 'filesystem.json')
            {
                var filename = path.basename(files[file]);
                if (fsdata.hasOwnProperty(filename)) {
                    if (fsdata.exploits[filename].folder == folder)
                    {
                        var addSploit = true
                    }
                    else
                    {
                        var addSploit = false
                    }
                }
                else
                {
                    var addSploit = true
                }
                if (addSploit)
                {
                    var app_md5 = md5(files[file]);
                    data.sploits[filename] = {
                        type: path.extname(files[file]),
                        image: 'none.jpg',
                        description: 'This exploit could not be found in the exploit database...',
                        creator: 'unknown',
                        version: 'unknown',
                        md5: app_md5,
                        name: path.basename(files[file]).split('.')[0],
                        filename: path.basename(files[file]).split('.')[0],
                        sysvers: ["unknown"]
                    };
                    for(var appy in exploitdb)
                    {
                        if (exploitdb[appy].hasOwnProperty('md5list'))
                        {
                            if (exploitdb[appy].md5list.indexOf(app_md5) != -1)
                            {
                                data.sploits[filename] = exploitdb[appy];
                                data.sploits[filename].md5 = app_md5;
                                data.sploits[filename].version = data.sploits[filename].versionlist[exploitdb[appy].md5list.indexOf(app_md5)]
                            }
                        }
                    }
                }
            }
        }
        res.render('folder', data);
    });
});

module.exports = router;
